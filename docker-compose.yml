version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: nlife_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-nlife_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nlife_dev_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - nlife_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-nlife_db}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Backend
  backend:
    build:
      context: ./nlife-backend
      dockerfile: Dockerfile
    container_name: nlife_backend
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-nlife_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-nlife_dev_password}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DATABASE_URL=${DATABASE_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-secret-key-not-for-production}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0,backend}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nlife_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python create_superuser.py --force &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 nlife_project.wsgi:application"

  # React Frontend
  frontend:
    build:
      context: ./nlife-frontend
      dockerfile: Dockerfile
    container_name: nlife_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - nlife_network
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: nlife_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nlife_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data:

networks:
  nlife_network:
    driver: bridge
