version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: nlife_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-nlife_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nlife_dev_password}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - nlife_network

  # Django Backend (Development mode)
  backend:
    build:
      context: ./nlife-backend
      dockerfile: Dockerfile.dev
    container_name: nlife_backend_dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-nlife_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-nlife_dev_password}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-secret-key-not-for-production}
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend
    volumes:
      - ./nlife-backend:/app
      - static_volume_dev:/app/staticfiles
      - media_volume_dev:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - nlife_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python create_superuser.py --force &&
             python manage.py runserver 0.0.0.0:8000"

  # React Frontend (Development mode with hot reload)
  frontend:
    build:
      context: ./nlife-frontend
      dockerfile: Dockerfile.dev
    container_name: nlife_frontend_dev
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./nlife-frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - nlife_network
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data_dev:
  static_volume_dev:
  media_volume_dev:

networks:
  nlife_network:
    driver: bridge
